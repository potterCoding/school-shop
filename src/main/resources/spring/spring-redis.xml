<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--redis连接池配置-->
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <!--控制一个连接池可以分配多少个jedis实例-->
        <property name="maxTotal" value="${redis.pool.maxActive}" />
        <!--连接池最大空闲数-->
        <property name="maxIdle" value="${redis.pool.maxIdle}" />
        <!--最大等待时间：当没有可用连接时，连接池等待 接口被归还的最大时间（以毫秒计数），超出时间则抛出异常-->
        <property name="maxWaitMillis" value="${redis.pool.maxWait}" />
        <!--在获取连接 时，检查连接的有效性-->
        <property name="testOnBorrow" value="${redis.pool.testOnBorrow}" />
    </bean>

    <!--创建redis连接池-->
    <bean id="jedisWritePool" class="cn.reminis.o2o.cache.JedisPoolWriper" depends-on="jedisPoolConfig">
        <constructor-arg index="0" ref="jedisPoolConfig" />
        <constructor-arg index="1" value="${redis.hostname}" />
        <constructor-arg index="2" value="${redis.port}" type="int" />
    </bean>

    <!--创建redis工具类，封装好redis的连接以进行相关的操作-->
    <bean id="jedisUtil" class="cn.reminis.o2o.cache.JedisUtil" scope="singleton">
        <property name="jedisPool">
            <ref bean="jedisWritePool" />
        </property>
    </bean>

    <!--Redis的key操作-->
    <bean id="jedisKeys" class="cn.reminis.o2o.cache.JedisUtil$Keys" scope="singleton">
        <constructor-arg ref="jedisUtil"></constructor-arg>
    </bean>

    <bean id="jedisString" class="cn.reminis.o2o.cache.JedisUtil$Strings" scope="singleton">
        <constructor-arg ref="jedisUtil"></constructor-arg>
    </bean>
</beans>